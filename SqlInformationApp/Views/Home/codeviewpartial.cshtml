@{
    var foo = 123;
}

<div class="text-center">
    <h1 class="display-4">SQL CodeBuilder</h1>
</div><br />

<div class="row">
    <div class="col-12">
        <div class="card">
            <h5 class="card-header">C# Web API Example using the <span class="text-primary" data-bind="text:queryName"></span> query</h5>
            <div class="card-body">
                <h5 class="card-title">Using <a target="_blank" href="https://www.nuget.org/profiles/netbiz">AndersonEnterprise.SqlQueryService</a> NuGet package</h5>
                <div contenteditable="true" spellcheck="false" style="">
<pre class="ae-edit-content">
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using AndersonEnterprise.SqlQueryService; <span style="color:green">// << get from NuGet</span>

namespace Sample.Controllers.Apis
{
    /// &lt;summary&gt;
    /// <span style="color:green"><span data-bind="text:queryName"></span> - web api controller for returning rows from named-query "<text data-bind="text:queryName"></text>"</span>
    /// &lt;/summary&gt;
    [Route("api/[controller]")] <span style="color:green">//api/<span data-bind="text:queryName"></span></span>
    public class <span data-bind="text:queryName"></span>Controller : <strong>InfoQueryServiceController</strong>
    {
        public <span data-bind="text:queryName"></span>Controller(IConfiguration config) : base(config) { }
        <span style="color:green">// set known query name ... base controller will chase it down and run it</span>
        public override string QueryName => "<text data-bind="text:queryName"></text>";
    }
}
</pre>
                </div>
                <p class="text-info">Other examples/techniques can be found in the GitHub download.</p>
                <a data-bind="click:runFooBarQuery" href="#" class="btn btn-sm btn-primary">Run Query (see result in console)</a>
            </div>
        </div>
    </div>
</div>

<br/>
<h4>Example Code Snippets - See <a target="_blank" href="https://github.com/netbizsystems/SQL-InfoSchema-App/wiki">Wiki</a> for Much More</h4>
<br/>

<div class="row">
    <div class="col-12">

        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="snip1-tab" data-toggle="tab" href="#snip-fetch" role="tab" aria-controls="" aria-selected="true">JS-Fetch</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="snip2-tab" data-toggle="tab" href="#snip-html" role="tab" aria-controls="" aria-selected="false">HTML-View</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="snip3-tab" data-toggle="tab" href="#snip-csvm" role="tab" aria-controls="" aria-selected="false">C#-ViewModel</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="snip4-tab" data-toggle="tab" href="#snip-json" role="tab" aria-controls="" aria-selected="false">JSON-ViewModel</a>
            </li>
        </ul>
        
        <div class="tab-content border" style="padding:15px;">
            
            <div class="tab-pane fade show active" id="snip-fetch" role="tabpanel" aria-labelledby="">               
                <p>Issue GET to API controller shown above.</p>
                <div contenteditable="true" spellcheck="false" style="">
<pre class="ae-edit-content">
<span style="color:green">// get json data from api server</span>
fetch("/api/<span data-bind="text:queryName"></span>", { method: 'GET' })
    .then(response => { return response.json(); })
    .then(jsonData => {
        console.log(jsonData);
    });
</pre>
                </div>
            </div>
            
            <div class="tab-pane fade" id="snip-html" role="tabpanel" aria-labelledby="">
                <p>Markup shown includes MVVM bindings for use with Knockout.js.</p>
                <div contenteditable="true" spellcheck="false" style="">
                    <div data-bind="foreach: queryColumns">
<pre class="ae-edit-content">
&lt;label for="<span data-bind="text:$data"></span>"&gt;<span data-bind="text:$data"></span>&lt;/label&gt;
&lt;input id="<span data-bind="text:$data"></span>" data-bind="value:<span data-bind="text:$data"></span>" type="text" class="form-control" placeholder=""&gt;
&lt;span data-bind="visible:<span data-bind="text:$data"></span>.hasError, text:<span data-bind="text:$data"></span>.errorText" class="text-danger"&gt;&lt;/span&gt;
</pre>
                    </div>
                </div>
            </div>
            
            <div class="tab-pane fade" id="snip-csvm" role="tabpanel" aria-labelledby="">
                <p>...</p>
                <div contenteditable="true" spellcheck="false" style="">
<pre class="ae-edit-content">
public class <span data-bind="text:queryName"></span>_ViewModel
{
</pre>
                    <div data-bind="foreach: queryColumns">
<pre class="ae-edit-content">
&nbsp;&nbsp;&nbsp;&nbsp;public <span data-bind="text:$root.queryTypes()[$index()]"></span> <span data-bind="text:$data"></span> { get; set; }
</pre>
                    </div>
<pre class="ae-edit-content">
}
</pre>

                </div>
            </div>
            
            <div class="tab-pane fade" id="snip-json" role="tabpanel" aria-labelledby="">
                <p>...</p>
                <div contenteditable="true" spellcheck="false" style="">
<pre class="ae-edit-content">
function <span data-bind="text:queryName"></span>Model(jsonData)
{
</pre>
                    <div data-bind="foreach: queryColumns">
<pre class="ae-edit-content2">
&nbsp;&nbsp;&nbsp;&nbsp;this.<span data-bind="text:$root.getJsonFormat($data)"></span> = undefined;
</pre>
                    </div>
<pre class="ae-edit-content">
}
</pre>

                </div>
            </div>
        </div>

    </div>
</div>
